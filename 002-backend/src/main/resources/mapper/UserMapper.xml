<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaou.mapper.UserMapper">

    <resultMap id="UserResultMap" type="com.xiaou.entity.User">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
        <result property="role" column="role"/>
        <result property="email" column="email"/>
        <result property="phone" column="phone"/>
        <result property="studentNo" column="student_no"/>
        <result property="teacherNo" column="teacher_no"/>
        <result property="major" column="major"/>
        <result property="className" column="class_name"/>
        <result property="status" column="status"/>
        <result property="createdTime" column="created_time"/>
        <result property="updatedTime" column="updated_time"/>
    </resultMap>

    <select id="findById" resultMap="UserResultMap">
        SELECT * FROM users WHERE id = #{id}
    </select>

    <select id="findByUsername" resultMap="UserResultMap">
        SELECT * FROM users WHERE username = #{username}
    </select>

    <select id="findAll" resultMap="UserResultMap">
        SELECT * FROM users
        <where>
            <if test="role != null and role != ''">
                AND role = #{role}
            </if>
            <if test="keyword != null and keyword != ''">
                AND (name LIKE CONCAT('%', #{keyword}, '%')
                OR username LIKE CONCAT('%', #{keyword}, '%')
                OR student_no LIKE CONCAT('%', #{keyword}, '%')
                OR teacher_no LIKE CONCAT('%', #{keyword}, '%'))
            </if>
        </where>
        ORDER BY created_time DESC
    </select>

    <insert id="insert" parameterType="com.xiaou.entity.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO users (username, password, name, role, email, phone, student_no, teacher_no, major, class_name, status)
        VALUES (#{username}, #{password}, #{name}, #{role}, #{email}, #{phone}, #{studentNo}, #{teacherNo}, #{major}, #{className}, #{status})
    </insert>

    <update id="update" parameterType="com.xiaou.entity.User">
        UPDATE users
        <set>
            <if test="password != null">password = #{password},</if>
            <if test="name != null">name = #{name},</if>
            <if test="email != null">email = #{email},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="major != null">major = #{major},</if>
            <if test="className != null">class_name = #{className},</if>
            <if test="status != null">status = #{status},</if>
        </set>
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM users WHERE id = #{id}
    </delete>

</mapper>

